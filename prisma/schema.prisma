// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String     @unique
  description String?
  // songs    Song[]
  // blog   Blog[]


  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}
model Album {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String     @unique
  description String?
  isActive    Boolean
  // songs    Song[]
  // blog   Blog[]


  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}
model Song {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String     @unique
  language String?
  isrcCode    Boolean?
  isExplicit  Boolean?
  lyrics      String?
  producer      String?


  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Artist {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName          String
  lastName          String
  artistName          String
  artistPhone          String
  artistAddress          String
  artistEmail          String
  recordLabel          String
  slug           String   @unique
  imageUrl       String?
  is18       Boolean
  // categoryId     String   @db.ObjectId
  // category       Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  // userId String @db.ObjectId

  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
}